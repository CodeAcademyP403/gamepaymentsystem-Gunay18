// <auto-generated />
using System;
using GamePaymentSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GamePaymentSystem.Migrations
{
    [DbContext(typeof(GamePaymentDbContext))]
    [Migration("20181011201105_Unclicked")]
    partial class Unclicked
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GamePaymentSystem.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("MaxPrice");

                    b.Property<double>("MinPrice");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("PhotoPath")
                        .IsRequired();

                    b.Property<string>("Url")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GamePaymentSystem.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameId");

                    b.Property<DateTime>("PaymentTime");

                    b.Property<double>("Price");

                    b.Property<bool>("Status");

                    b.Property<string>("UserIP");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("GamePaymentSystem.Models.Payment", b =>
                {
                    b.HasOne("GamePaymentSystem.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
